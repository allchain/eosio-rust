initSidebarItems({"attr":[["action","Derive the `Write` trait"],["table","Derive the `Read` trait"]],"constant":[["NAME_CHARS","All possible characters that can be used in EOSIO names."],["NAME_MAX_LEN","The maximum character length of an EOSIO name."],["SYMBOL_CODE_CHARS","All possible characters that can be used in EOSIO symbol codes."],["SYMBOL_CODE_MAX_LEN","The maximum allowed length of EOSIO symbol codes."]],"derive":[["NumBytes",""],["Read","TODO docs"],["Table",""],["Write","Derive the `NumBytes` trait"]],"enum":[["BlockNumOrId","TODO docs"],["ParseNameError","An error which can be returned when parsing an EOSIO name."],["ParseSymbolCodeError","An error which can be returned when parsing an EOSIO symbol."],["ParseSymbolError","An error which can be returned when parsing an EOSIO symbol."],["ReadError","Error that can be returned when reading bytes."],["SecondaryKey","TODO docs"],["WriteError","Error that can be returned when writing bytes."]],"macro":[["abi",""],["n","Macro for converting EOSIO names into `u64` representations at compile time."],["name_type",""],["s","Macro for converting EOSIO symbols into `u64` representations at compile time."]],"struct":[["Abi",""],["AbiAction",""],["AbiErrorMessage",""],["AbiExtension",""],["AbiField",""],["AbiRicardianClause",""],["AbiStruct",""],["AbiTable",""],["AbiType",""],["AccountName",""],["Action","This is the packed representation of an action along with meta-data about the authorization levels."],["ActionName",""],["Asset","Stores information for owner of asset https://github.com/EOSIO/eosio.cdt/blob/4985359a30da1f883418b7133593f835927b8046/libraries/eosiolib/core/eosio/asset.hpp#L18-L369"],["BinaryExtension",""],["BlockId","TODO docs"],["BlockNum","TODO docs"],["BlockSigningAuthority","block signing authority version 0 this authority allows for a weighted threshold multi-sig per-producer"],["BlockTimestamp","This class is used in the block headers to represent the block time It is a parameterised class that takes an Epoch in milliseconds and and an interval in milliseconds and computes the number of slots."],["BlockchainParameters","Tunable blockchain configuration that can be changed via consensus"],["ChainId","Tunable blockchain configuration that can be changed via consensus"],["Checksum160",""],["Checksum256",""],["Checksum512",""],["CpuWeight","CPU Weight"],["DataStream","A stream of bytes"],["ExtendedAsset","Extended asset which stores the information of the owner of the asset https://github.com/EOSIO/eosio.cdt/blob/4985359a30da1f883418b7133593f835927b8046/libraries/eosiolib/core/eosio/asset.hpp#L371-L481"],["ExtendedSymbol","Extended asset which stores the information of the owner of the symbol https://github.com/EOSIO/eosio.cdt/blob/4985359a30da1f883418b7133593f835927b8046/libraries/eosiolib/core/eosio/symbol.hpp#L372-L450"],["KeyWeight","pairs a public key with an integer weight"],["Name","TODO docs TODO use `NonZeroU64`"],["NetWeight","Net Weight"],["PermissionLevel","A permission"],["PermissionName",""],["PrimaryTableIndex","TODO docs"],["PrivateKey","TODO docs"],["ProducerAuthority","Maps producer with its signing key, used for producer schedule"],["ProducerKey","Maps producer with its signing key, used for producer schedule https://github.com/EOSIO/eosio.cdt/blob/796ff8bee9a0fc864f665a0a4d018e0ff18ac383/libraries/eosiolib/contracts/eosio/producer_schedule.hpp#L15-L45"],["ProducerSchedule","Defines both the order, account name, and signing keys of the active set of producers."],["PublicKey","TODO depreciate, newer signature types cannot be represented as a fixed size structure EOSIO Public Key https://github.com/EOSIO/eosio.cdt/blob/4985359a30da1f883418b7133593f835927b8046/libraries/eosiolib/core/eosio/crypto.hpp#L22-L48"],["RamBytes","RAM in bytes"],["ScopeName",""],["SecondaryKeys","TODO docs"],["SecondaryTableIndex","TODO docs"],["SecondaryTableName","TODO docs"],["Signature","TODO depreciate, newer signature types cannot be represented as a fixed size structure EOSIO Public Key https://github.com/EOSIO/eosio.cdt/blob/4985359a30da1f883418b7133593f835927b8046/libraries/eosiolib/core/eosio/crypto.hpp#L22-L48"],["SignedInt","Variable Length Signed Integer. This provides more efficient serialization of 32-bit signed int. It serializes a 32-bit signed integer in as few bytes as possible. `SignedInt` is signed and uses Zig-Zag encoding https://github.com/EOSIO/eosio.cdt/blob/4985359a30da1f883418b7133593f835927b8046/libraries/eosiolib/core/eosio/varint.hpp#L239-L465"],["Symbol","Stores information about a symbol, the symbol can be 7 characters long."],["SymbolCode","Stores the symbol code as a `u64` value"],["TableName",""],["TimePoint","High resolution time point in microseconds https://github.com/EOSIO/eosio.cdt/blob/4985359a30da1f883418b7133593f835927b8046/libraries/eosiolib/core/eosio/time.hpp#L49-L77"],["TimePointSec","A lower resolution `TimePoint` accurate only to seconds from 1970 https://github.com/EOSIO/eosio.cdt/blob/4985359a30da1f883418b7133593f835927b8046/libraries/eosiolib/core/eosio/time.hpp#L79-L132"],["Transaction","TODO docs"],["TransactionExtension","TODO docs"],["TransactionHeader","TODO docs"],["TransactionId","TODO docs TODO represet this as a String for RPC"],["UnsignedInt","Variable Length Unsigned Integer. This provides more efficient serialization of 32-bit unsigned int. It serialuzes a 32-bit unsigned integer in as few bytes as possible. `UnsignedInt` is unsigned and uses VLQ or Base-128 encoding https://github.com/EOSIO/eosio.cdt/blob/4985359a30da1f883418b7133593f835927b8046/libraries/eosiolib/core/eosio/varint.hpp#L15-L237"]],"trait":[["ActionFn","TODO docs."],["CheckedAdd","TODO docs"],["CheckedDiv","TODO docs"],["CheckedMul","TODO docs"],["CheckedRem","TODO docs"],["CheckedSub","TODO docs"],["NumBytes","Count the number of bytes a type is expected to use."],["Read","Read bytes."],["Table","TODO docs"],["Write","Write bytes."]]});